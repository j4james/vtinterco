// VT INTERCO
// Copyright (c) 2024 James Holderness
// Distributed under the MIT License

#include "font.h"

#include "vt.h"

// This font has glyphs for the morse code dot and dash, as well as some
// superscript and subscript digits to produce more readable fractions.

constexpr auto font_10x20 = R"(0;7;1;10;0;2;20;0{ @
??CE}}????/??KKNNKK?o/??????o[F@/??????????;;;
??w}eeeE??/??CKKKNF?o/??????o[F@/??????????;
??CEEe}[??/??KMNLKK?o/??????o[F@/??????????;;
??????????/?{{{{{{{{?/??????????/??????????;
????__????/??{~~~~{??/???BFFB???/??????????;;;
??????????/??????????/??????????/??????????;
??oW??????/[F`oooo_??/??_owkfb??/??@@@@@@??;
??oW??????/[F`oooo_??/??__ce~z??/???@@@@???;
??oW??????/[Fpo??oo??/??NNKK~~K?/??????@@??;;;;
??oW??????/[F`oOOOo_?/??x~ECE~x?/???@@@@@??
)";

soft_font::soft_font()
{
    auto font_data = std::string{font_10x20};
    // Some terminals (like RLogin) will not cope with DECDLD content
    // containing newlines, so we need to strip those out first.
    std::erase(font_data, '\n');
    vtout.dcs(font_data);
    // Designate the soft font as G1.
    vtout.scs(1, " @");
}

soft_font::~soft_font()
{
    // Make sure the ASCII character set is restored on exit.
    vtout.scs(1, "B");
    // Also erase the font buffers on exit.
    vtout.dcs("0;0;2{ @");
}
